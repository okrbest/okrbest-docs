# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2025 Mattermost
# This file is distributed under the same license as the Mattermost package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Mattermost \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-15 06:10+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ko\n"
"Language-Team: ko <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../source/deploy/application-architecture.rst:2
msgid "Application architecture"
msgstr ""

#: ../../source/deploy/application-architecture.rst:4
msgid ""
"Mattermost is an open-source collaboration platform that offers secure "
"messaging, file sharing, and integrations for team communication. It's "
"self-hosted, providing IT admins full control over data, security, "
"integrations, and customization. The platform is built with modular "
"components to ensure scalability, flexibility, and extensibility."
msgstr ""

#: ../../source/deploy/application-architecture.rst:-1
msgid ""
"Mattermost network diagram shows how the components can be deployed. "
"Includes optional configurations for scaling for larger enterprise "
"organizations."
msgstr ""

#: ../../source/deploy/application-architecture.rst:11
msgid "Workflow overview"
msgstr ""

#: ../../source/deploy/application-architecture.rst:13
msgid ""
"Users connect through various access points (web, mobile, desktop, "
"email). Their requests are processed by the application layer (Mattermost"
" Server), which manages API communications, authentication, "
"notifications, and data workflows."
msgstr ""

#: ../../source/deploy/application-architecture.rst:15
msgid ""
"The backend infrastructure supports these operations by storing all data "
"and files in well-architected storage systems."
msgstr ""

#: ../../source/deploy/application-architecture.rst:17
msgid ""
"Extendability and security layers ensure that the platform integrates "
"seamlessly with enterprise systems while protecting sensitive data."
msgstr ""

#: ../../source/deploy/application-architecture.rst:20
msgid "Core components"
msgstr ""

#: ../../source/deploy/application-architecture.rst:22
msgid ""
"The technical architecture revolves around 3 main layers: `Access layer "
"<#access-layer>`__, `Application layer <#application-layer>`__, and "
"`Backend infrastructure <#backend-infrastructure>`__."
msgstr ""

#: ../../source/deploy/application-architecture.rst:25
msgid "Access layer"
msgstr ""

#: ../../source/deploy/application-architecture.rst:27
msgid ""
"The Access Layer includes all the ways users interact with Mattermost, "
"ensuring secure, scalable, and reliable communication across preferred "
"platforms. High availability measures provide uninterrupted functionality"
" for users, even in the face of server or network failures."
msgstr ""

#: ../../source/deploy/application-architecture.rst:29
msgid ""
"**Web Interface**: Users can access Mattermost through a web browser "
"(Chrome, Firefox, Safari, Edge). The web client communicates with the "
"Mattermost server over HTTPS protocols. High availability for web "
"interfaces can be achieved through load-balanced reverse proxies (e.g., "
"NGINX or HAProxy) that distribute user traffic across multiple Mattermost"
" server instances. Backup proxy servers can ensure failover scenarios to "
"keep the web interface operational during outages."
msgstr ""

#: ../../source/deploy/application-architecture.rst:30
msgid ""
"**Desktop and Mobile Apps**: Native apps for iOS, Android, macOS, "
"Windows, and Linux provide seamless functionality across devices. These "
"apps rely on secure APIs to interact with the server for real-time "
"messaging and updates. High availability can be ensured by deploying "
"redundant server clusters to handle API requests, along with failover "
"mechanisms that automatically redirect traffic to healthy servers. Mobile"
" apps also benefit from retry mechanisms and fallback services for push "
"notifications to maintain real-time responsiveness."
msgstr ""

#: ../../source/deploy/application-architecture.rst:31
msgid ""
"**Email Interaction**: Support for email clients like Outlook, Gmail, or "
"Thunderbird enables integration of email notifications (e.g., new message"
" alerts, invitations) into users' typical workflows. The Access Layer "
"ensures that users are always connected via platforms of their choice "
"while maintaining secure, synchronized communication paths. Email "
"services can be configured with multiple SMTP servers for redundancy, "
"ensuring that notifications are sent without delay even if a primary mail"
" server becomes unavailable."
msgstr ""

#: ../../source/deploy/application-architecture.rst:33
msgid ""
"The Access Layer plays a critical role in ensuring that users are always "
"connected via the platforms of their choice while maintaining secure, "
"synchronized communication paths. With high availability measures in "
"place, organizations can guarantee a seamless user experience, regardless"
" of the scale or complexity of their deployment."
msgstr ""

#: ../../source/deploy/application-architecture.rst:36
msgid "Application layer"
msgstr ""

#: ../../source/deploy/application-architecture.rst:38
msgid ""
"The Mattermost Server is the heart of the platform and responsible for "
"processing all user and system operations. It's composed of multiple "
"modular elements as follows:"
msgstr ""

#: ../../source/deploy/application-architecture.rst:-1
msgid "Mattermost architecture basics"
msgstr ""

#: ../../source/deploy/application-architecture.rst:44
msgid ""
"**RESTful JSON Web Service**: Handles all incoming API requests (from web"
" clients, apps, and integrations) and ensures that responses are "
"formatted in JSON. Acts as the communication bridge between the clients "
"(Access Layer) and backend systems. To ensure high availability, this "
"layer can be distributed across multiple servers and load-balanced, "
"preventing service disruptions due to high traffic or server failure."
msgstr ""

#: ../../source/deploy/application-architecture.rst:46
msgid ""
"**Authentication client**: Manages user authentication, ensuring secure "
"login sessions. Integrates with traditional username/password-based "
"authentication or enterprise-grade solutions like SSO (Single Sign-On) "
"through Active Directory/LDAP. High availability is maintained through "
"redundant authentication nodes and failover mechanisms, ensuring "
"uninterrupted access even if a primary authentication service fails."
msgstr ""

#: ../../source/deploy/application-architecture.rst:48
msgid ""
"**Authentication Provider**: Provides pluggable authentication frameworks"
" to support OAuth, SSO, and third-party identity services. Particularly "
"important for enterprise environments with centralized identity "
"management. Redundancy and failover strategies ensure reliability by "
"distributing authentication frameworks across multiple servers and "
"offering fallback options for seamless identity management."
msgstr ""

#: ../../source/deploy/application-architecture.rst:50
msgid "**Notification Service**: Sends notifications through supported mediums:"
msgstr ""

#: ../../source/deploy/application-architecture.rst:52
msgid ""
"**Push Notifications**: Real-time notifications to iOS and Android "
"devices (via a Push Notification Service). High availabilty is ensured "
"through multiple notification servers and retry mechanisms, guaranteeing "
"that notifications are delivered even in the event of service "
"disruptions."
msgstr ""

#: ../../source/deploy/application-architecture.rst:53
msgid ""
"**Email Notifications**: Delivered to users when they are offline or need"
" event alerts. Load balancing and backup mail server configurations help "
"ensure email delivery remains consistent and reliable."
msgstr ""

#: ../../source/deploy/application-architecture.rst:55
msgid ""
"**Data Management Service**: Responsible for managing message data, "
"metadata, user profiles, and logs. Ensures the integrity of data passed "
"between the database and the server. This layer serves as the operational"
" core of the platform, orchestrating user activities with data handling "
"and integration capabilities."
msgstr ""

#: ../../source/deploy/application-architecture.rst:57
msgid ""
"High availability is achieved through database replication, failover "
"strategies, and distributed data handling mechanisms. These measures "
"ensure uninterrupted access to data and protect against component "
"failures or downtime. The Data Management Service serves as the "
"operational core of the platform, orchestrating user activities with "
"scalable and fault-tolerant data handling capabilities."
msgstr ""

#: ../../source/deploy/application-architecture.rst:60
msgid "Backend infrastructure"
msgstr ""

#: ../../source/deploy/application-architecture.rst:62
msgid ""
"The backend infrastructure provides the storage and data handling "
"capabilities required for Mattermost operations. It consists of the "
"following components:"
msgstr ""

#: ../../source/deploy/application-architecture.rst:64
msgid ""
"**Database Systems**: Mattermost uses PostgreSQL as its primary database "
"(supports Amazon RDS for cloud-hosted PostgreSQL) to store all persistent"
" data, such as:"
msgstr ""

#: ../../source/deploy/application-architecture.rst:66
msgid "Messages"
msgstr ""

#: ../../source/deploy/application-architecture.rst:67
msgid "User accounts and credentials"
msgstr ""

#: ../../source/deploy/application-architecture.rst:68
msgid "Configuration settings"
msgstr ""

#: ../../source/deploy/application-architecture.rst:69
msgid "Team/channel metadata"
msgstr ""

#: ../../source/deploy/application-architecture.rst:71
msgid ""
"To ensure high availability, database systems can leverage clustering, "
"replication, and failover mechanisms. PostgreSQL supports features like "
"synchronous and asynchronous replication to create replicas for "
"redundancy. Cloud-hosted solutions like Amazon RDS provide automatic "
"failover and backup capabilities, ensuring continuous operation during "
"system failures."
msgstr ""

#: ../../source/deploy/application-architecture.rst:73
msgid ""
"**File Storage**: Manages all multimedia assets (e.g., file uploads, "
"images, videos) shared across channels. Storage solutions include the "
"following options:"
msgstr ""

#: ../../source/deploy/application-architecture.rst:75
msgid ""
"**Local Storage**: Files stored directly on the server’s filesystem. For "
"high availability, redundancy can be achieved using RAID configurations "
"or backups to recover from disk failures."
msgstr ""

#: ../../source/deploy/application-architecture.rst:76
msgid ""
"**Network Attached Storage (NAS)**: Common for enterprises centralizing "
"file storage within their network. NAS setups can include fault-tolerant "
"configurations like distributed systems or replication for uninterrupted "
"access."
msgstr ""

#: ../../source/deploy/application-architecture.rst:77
msgid ""
"**S3**: Offers cloud-based scalable storage for larger environments or "
"organizations with distributed deployments. The database and file storage"
" handle scalability, ensuring efficient support for millions of messages "
"and files while guaranteeing data consistency. S3 inherently supports "
"high availability by distributing data across multiple availability "
"zones, ensuring no single point of failure."
msgstr ""

#: ../../source/deploy/application-architecture.rst:79
msgid ""
"High availability measures ensure scalable and fail-safe support for "
"millions of messages and files while guaranteeing data consistency."
msgstr ""

#: ../../source/deploy/application-architecture.rst:81
msgid ""
"**System Extensions**: Mattermost is not only a collaboration tool but "
"also a platform designed for extensibility. Key extensibility features "
"include:"
msgstr ""

#: ../../source/deploy/application-architecture.rst:83
msgid ""
"**Self-Hosted Integrations**: Connect Mattermost to other local or cloud-"
"based systems like Jira, GitLab, or any custom integrations your team "
"needs. Leverage built-in APIs and webhooks to automate workflows and "
"trigger system-to-system communications. For high availaiblity, "
"integrations can employ redundant communication channels and retry "
"mechanisms to handle transient failures gracefully."
msgstr ""

#: ../../source/deploy/application-architecture.rst:85
msgid ""
"**Third-Party Authentication**: Bind integrations to third-party "
"platforms (e.g., Slack-importing APIs, OAuth services). Third-party "
"identity services ensure consistent and secure user access flows. Third-"
"party identity services can leverage load-balancing and failover "
"strategies to ensure consistent and secure user access flows, even under "
"high traffic or outages."
msgstr ""

#: ../../source/deploy/application-architecture.rst:87
msgid ""
"**Security and Scalability Features**: Security and scalability are baked"
" into the architecture, making Mattermost ideal for enterprise use cases:"
msgstr ""

#: ../../source/deploy/application-architecture.rst:89
msgid "**Security**"
msgstr ""

#: ../../source/deploy/application-architecture.rst:91
msgid ""
"A reverse proxy like NGINX or a hardware proxy is deployed to manage "
"external traffic. It protects servers, enforces HTTPS, and handles load "
"balancing."
msgstr ""

#: ../../source/deploy/application-architecture.rst:92
msgid "Configurable SSL/TLS encryption ensures data security during transmission."
msgstr ""

#: ../../source/deploy/application-architecture.rst:93
msgid ""
"Granular user permissions and roles secure sensitive information within "
"teams."
msgstr ""

#: ../../source/deploy/application-architecture.rst:95
msgid ""
"**Scalability and High Availability**: The Enterprise Edition supports "
"deploying multiple Mattermost servers in a clustered environment to "
"balance user requests across multiple servers for reliability and "
"performance in large organizations. Clustering ensures automatic failover"
" so that user traffic is shifted to functioning servers in case of "
"outages."
msgstr ""

#: ../../source/deploy/application-architecture.rst:97
msgid ""
"**Notifications and communication services**: Mattermost supports "
"asynchronous and real-time communication, enhanced by notification "
"systems tailored for different workflows:"
msgstr ""

#: ../../source/deploy/application-architecture.rst:99
msgid ""
"**Push Notifications**: Delivered to mobile devices for message alerts or"
" mentions. High availability is achieved with backup notification "
"services and retry mechanisms for reliable delivery."
msgstr ""

#: ../../source/deploy/application-architecture.rst:100
msgid ""
"**Email Integration**: Provides regular notifications when users are "
"offline or inactive. Failover mail servers and distributed configurations"
" ensure email notifications are sent without interruption."
msgstr ""

#: ../../source/deploy/application-architecture.rst:102
msgid "These services ensure continuous engagement and communication."
msgstr ""

#: ../../source/deploy/application-architecture.rst:105
msgid "Communication protocols"
msgstr ""

#: ../../source/deploy/application-architecture.rst:107
msgid ""
"There are also communication protocols (HTTPS and WS) that define the "
"type of connection the user makes with the Mattermost server. High "
"availability measures ensure reliable and resilient connections between "
"clients and the Mattermost server, especially in production environments."
msgstr ""

#: ../../source/deploy/application-architecture.rst:109
msgid "**HTTPS Connection** (Secure Hypertext Transfer Protocol)"
msgstr ""

#: ../../source/deploy/application-architecture.rst:111
msgid ""
"HTTPS connections to the Mattermost server render pages and provide "
"access to core platform functionality, but do not include real-time "
"interactivity (which is enabled by WSS connections)."
msgstr ""

#: ../../source/deploy/application-architecture.rst:112
msgid ""
"HTTPS is a secure, encrypted protocol and is highly recommended for "
"production. Unencrypted HTTP connections may be used in initial testing "
"and configuration, but should never be used in a production environment. "
"For high availability, HTTPS traffic should be handled by a reverse proxy"
" (e.g., NGINX or HAProxy) with load balancer configurations to distribute"
" connections across multiple Mattermost server instances. Redundant proxy"
" servers ensure failover capabilities, providing uninterrupted service."
msgstr ""

#: ../../source/deploy/application-architecture.rst:114
msgid "**WSS Connection** (Secure WebSocket Protocol)"
msgstr ""

#: ../../source/deploy/application-architecture.rst:116
msgid ""
"Secure WebSocket (WSS) connections to the Mattermost Server enable real-"
"time updates and notifications between clients and the server."
msgstr ""

#: ../../source/deploy/application-architecture.rst:118
msgid ""
"If a WSS connection is not available and HTTPS is substituted, the system"
" will appear to work but real-time updates and notifications will not. In"
" this mode of operation, updates will only appear on a page refresh. WSS "
"has a persistent connection to the Mattermost server when a client is "
"connected, while HTTPS has an intermittent connection and only connects "
"to the server when a page or file is requested."
msgstr ""

#: ../../source/deploy/application-architecture.rst:120
msgid ""
"High availability for WSS connections can be achieved through clustering "
"Mattermost servers and load balancing WebSocket connections across those "
"cluster nodes. Proxy servers and WebSocket-specific configurations (such "
"as sticky sessions or connection persistence) are essential to maintain "
"real-time interactivity during server or network failures."
msgstr ""

#: ../../source/deploy/application-architecture.rst:-1
msgid "Mattermost architecture with protocol connections"
msgstr ""

#: ../../source/deploy/application-architecture.rst:126
msgid ""
"By incorporating high availability strategies into communication "
"protocols, the platform ensures secure, scalable, and reliable "
"connections for both regular user interactions (via HTTPS) and real-time "
"updates (via WSS). These measures are critical for mission-critical "
"environments and distributed deployments where continuous communication "
"is necessary."
msgstr ""

#: ../../source/deploy/application-architecture.rst:128
msgid "**Behind a VPN**"
msgstr ""

#: ../../source/deploy/application-architecture.rst:130
msgid ""
"Mattermost is intended to be installed within a private network which can"
" offer multiple factors of authentication, including secure access to "
"computing devices and physical locations. If outside access is required, "
"a virtual private network client (VPN), such as `OpenVPN "
"<https://openvpn.net/>`__, with additional authentication used to connect"
" to Mattermost for web, desktop, and mobile experiences, is recommended."
msgstr ""

#: ../../source/deploy/application-architecture.rst:132
msgid "**Non-VPN setup**"
msgstr ""

#: ../../source/deploy/application-architecture.rst:134
msgid ""
"If Mattermost is accessible from the open internet, the following is "
"recommended:"
msgstr ""

#: ../../source/deploy/application-architecture.rst:136
msgid ""
"An IT admin should be assigned to set up appropriate network security, "
"subscribe to `the Mattermost security bulletin <https://mattermost.com"
"/security-updates/#sign-up>`__, and :doc:`apply new security updates "
"</upgrade/upgrading-mattermost-server>`."
msgstr ""

#: ../../source/deploy/application-architecture.rst:137
msgid ""
"The organization enables :doc:`SAML Single Sign-on </onboard/sso-saml>` "
"or enable :doc:`MFA </onboard/multi-factor-authentication>`."
msgstr ""

#: ../../source/deploy/application-architecture.rst:139
msgid ""
"If Mattermost is accessible from the open internet with no VPN or MFA set"
" up, we recommended using it only for non-confidential, unimportant "
"conversations where impact of a compromised system is not essential."
msgstr ""

#: ../../source/deploy/application-architecture.rst:142
msgid "Mattermost services ports"
msgstr ""

#: ../../source/deploy/application-architecture.rst:144
msgid ""
"The following table lists the Mattermost services ports for Mattermost "
"Server, push proxy, and mobile app clients. System admins with clients "
"that need to speak to the Mattermost server without a proxy can open "
"specific firewall ports as needed."
msgstr ""

#: ../../source/deploy/application-architecture.rst:146
msgid "**Mattermost Server**"
msgstr ""

#: ../../source/deploy/application-architecture.rst:149
#: ../../source/deploy/application-architecture.rst:173
msgid "Service Name"
msgstr ""

#: ../../source/deploy/application-architecture.rst:149
#: ../../source/deploy/application-architecture.rst:173
msgid "Config Setting"
msgstr ""

#: ../../source/deploy/application-architecture.rst:149
#: ../../source/deploy/application-architecture.rst:173
msgid "Port (default)"
msgstr ""

#: ../../source/deploy/application-architecture.rst:149
#: ../../source/deploy/application-architecture.rst:173
msgid "Protocol"
msgstr ""

#: ../../source/deploy/application-architecture.rst:149
#: ../../source/deploy/application-architecture.rst:173
msgid "Direction"
msgstr ""

#: ../../source/deploy/application-architecture.rst:149
#: ../../source/deploy/application-architecture.rst:173
msgid "Info"
msgstr ""

#: ../../source/deploy/application-architecture.rst:151
msgid "HTTP/Websocket"
msgstr ""

#: ../../source/deploy/application-architecture.rst:151
msgid "ServiceSettings.ListenAddress"
msgstr ""

#: ../../source/deploy/application-architecture.rst:151
msgid "8065/80/443 (TLS)"
msgstr ""

#: ../../source/deploy/application-architecture.rst:151
#: ../../source/deploy/application-architecture.rst:157
#: ../../source/deploy/application-architecture.rst:159
#: ../../source/deploy/application-architecture.rst:163
#: ../../source/deploy/application-architecture.rst:167
#: ../../source/deploy/application-architecture.rst:175
msgid "TCP"
msgstr ""

#: ../../source/deploy/application-architecture.rst:151
#: ../../source/deploy/application-architecture.rst:155
#: ../../source/deploy/application-architecture.rst:157
#: ../../source/deploy/application-architecture.rst:175
msgid "Inbound"
msgstr ""

#: ../../source/deploy/application-architecture.rst:151
msgid ""
"External (no proxy) / Internal (with proxy) Usually this requires port 80"
" and 443 when running HTTPS."
msgstr ""

#: ../../source/deploy/application-architecture.rst:155
msgid "Cluster"
msgstr ""

#: ../../source/deploy/application-architecture.rst:155
msgid "ClusterSettings.GossipPort"
msgstr ""

#: ../../source/deploy/application-architecture.rst:155
msgid "8074"
msgstr ""

#: ../../source/deploy/application-architecture.rst:155
#: ../../source/deploy/application-architecture.rst:161
#: ../../source/deploy/application-architecture.rst:165
msgid "TCP/UDP"
msgstr ""

#: ../../source/deploy/application-architecture.rst:155
msgid "Internal"
msgstr ""

#: ../../source/deploy/application-architecture.rst:157
msgid "Metrics"
msgstr ""

#: ../../source/deploy/application-architecture.rst:157
msgid "MetricsSettings.ListenAddress"
msgstr ""

#: ../../source/deploy/application-architecture.rst:157
msgid "8067"
msgstr ""

#: ../../source/deploy/application-architecture.rst:157
#: ../../source/deploy/application-architecture.rst:175
msgid "External (no proxy) / Internal (with proxy)"
msgstr ""

#: ../../source/deploy/application-architecture.rst:159
msgid "Database"
msgstr ""

#: ../../source/deploy/application-architecture.rst:159
msgid "SqlSettings.DataSource"
msgstr ""

#: ../../source/deploy/application-architecture.rst:159
msgid "5432 (PostgreSQL) / 3306 (MySQL)"
msgstr ""

#: ../../source/deploy/application-architecture.rst:159
#: ../../source/deploy/application-architecture.rst:161
#: ../../source/deploy/application-architecture.rst:163
#: ../../source/deploy/application-architecture.rst:165
#: ../../source/deploy/application-architecture.rst:167
msgid "Outbound"
msgstr ""

#: ../../source/deploy/application-architecture.rst:159
msgid "Usually internal (recommended)"
msgstr ""

#: ../../source/deploy/application-architecture.rst:161
msgid "LDAP"
msgstr ""

#: ../../source/deploy/application-architecture.rst:161
msgid "LdapSettings.LdapPort"
msgstr ""

#: ../../source/deploy/application-architecture.rst:161
msgid "389"
msgstr ""

#: ../../source/deploy/application-architecture.rst:163
msgid "S3 Storage"
msgstr ""

#: ../../source/deploy/application-architecture.rst:163
msgid "FileSettings.AmazonS3Endpoint"
msgstr ""

#: ../../source/deploy/application-architecture.rst:163
#: ../../source/deploy/application-architecture.rst:167
msgid "443 (TLS)"
msgstr ""

#: ../../source/deploy/application-architecture.rst:165
msgid "SMTP"
msgstr ""

#: ../../source/deploy/application-architecture.rst:165
msgid "EmailSettings.SMTPPort"
msgstr ""

#: ../../source/deploy/application-architecture.rst:165
msgid "10025"
msgstr ""

#: ../../source/deploy/application-architecture.rst:167
msgid "Push Notifications"
msgstr ""

#: ../../source/deploy/application-architecture.rst:167
msgid "EmailSettings.PushNotificationServer"
msgstr ""

#: ../../source/deploy/application-architecture.rst:170
msgid "**Push Proxy**"
msgstr ""

#: ../../source/deploy/application-architecture.rst:175
msgid "Push Proxy"
msgstr ""

#: ../../source/deploy/application-architecture.rst:175
msgid "ListenAddress"
msgstr ""

#: ../../source/deploy/application-architecture.rst:175
msgid "8066"
msgstr ""

#: ../../source/deploy/application-architecture.rst:178
msgid "**Mobile Clients**"
msgstr ""

#: ../../source/deploy/application-architecture.rst:180
msgid ""
"To receive push notifications, your network must allow traffic on `port "
"5223 for iOS devices <https://support.apple.com/en-us/102266>`_ and "
"`ports 5228-5230 for Android <https://firebase.google.com/docs/cloud-"
"messaging/concept-options#messaging-ports-and-your-firewall>`_."
msgstr ""

