# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2025 Mattermost
# This file is distributed under the same license as the Mattermost package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Mattermost \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-15 06:10+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ko\n"
"Language-Team: ko <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:2
msgid "Prepare to upgrade Mattermost"
msgstr ""

#: ../../source/_static/badges/allplans-selfhosted.rst:7
msgid "|plans-img| Available on `all plans <https://mattermost.com/pricing/>`__"
msgstr ""

#: ../../<rst_prolog>:2
msgid "plans-img"
msgstr ""

#: ../../source/_static/badges/allplans-selfhosted.rst:9
msgid ""
"|deployment-img| `self-hosted <https://mattermost.com/download/>`__ "
"deployments"
msgstr ""

#: ../../<rst_prolog>:4
msgid "deployment-img"
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:7
msgid ""
"In most cases, you can :doc:`upgrade Mattermost Server </upgrade"
"/upgrading-mattermost-server>` in a few minutes. However, the upgrade can"
" take longer depending on several factors, including the size and "
"complexity of your installation, and the version that you're upgrading "
"from. When planning an upgrade, it's worth confirming that your current "
"database and operating system version are still supported. Details can be"
" found on our :ref:`software and hardware requirements <deploy/software-"
"hardware-requirements:server software>` page."
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:10
msgid "Upgrade Best Practices"
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:12
msgid ""
"Mattermost will aim to have non-locking, backwards-compatible migrations "
"in general. This backwards compatibility guarantee extends to only the "
"last ESR version. For example, if there are three ESR versions ESR1, "
"ESR2, and ESR3, upgrading from ESR1 to ESR2, and then ESR2 to ESR3 will "
"ensure backwards compatibility, but not from ESR1 to ESR3 directly."
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:14
msgid ""
"In the case of delayed upgrades, we recommend upgrading to the closest "
"ESR version first, and from there to the next ESR. Do not attempt to "
"directly upgrade to the latest version as it might break backwards "
"compatibility of the older nodes in the cluster during the upgrade."
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:17
msgid "Upgrade to Mattermost v7.1"
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:19
msgid ""
"Mattermost v7.1 introduces schema changes in the form of a new column and"
" its index. Our test results for the schema changes include:"
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:21
msgid "PostgreSQL 12M Posts, 2.5M Reactions - ~1min 18s (instance: db.r5.2xlarge)"
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:23
msgid ""
"You can run the following SQL queries before the upgrade that obtains a "
"lock on ``Reactions`` table. Users' reactions posted during this time "
"won't be reflected in the database until the migrations are complete. "
"This is fully backwards-compatible."
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:25
msgid ""
"If your connection collation and table collations are different, this can"
" result in the error `Illegal mix of collations`. To resolve this error, "
"set the same collation for both the connection and the table. There are "
"different collations at different levels - connection, database, table, "
"column, and database administrators may choose to set different collation"
" levels for different objects."
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:27
msgid ""
"``ALTER TABLE reactions ADD COLUMN IF NOT EXISTS channelid varchar(26) "
"NOT NULL DEFAULT '';``"
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:29
msgid ""
"``UPDATE reactions SET channelid = COALESCE((select channelid from posts "
"where posts.id = reactions.postid), '') WHERE channelid='';``"
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:31
msgid ""
"``CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_reactions_channel_id on "
"reactions (channelid);``"
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:34
msgid "Upgrade to Mattermost v6.7"
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:36
msgid ""
"Mattermost v6.7 introduces schema changes in the form of a new index. The"
" following notes our test results for the schema changes:"
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:38
msgid "Postgres 7M Posts - ~9s  (instance: db.r5.xlarge)"
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:40
msgid ""
"If you want a zero downtime upgrade, you can apply this index prior to "
"doing the upgrade."
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:42
msgid ""
"``CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_posts_create_at_id on "
"posts(createat, id);``"
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:44
msgid ""
"This is fully backwards-compatible and will not acquire any table lock or"
" affect any existing operations on the table."
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:48
msgid "Upgrade to Mattermost v6.0"
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:50
msgid ""
"A Mattermost Server v6.0 upgrade will run significant database schema "
"changes that can cause an extended startup time depending on the dataset "
"size. Zero downtime won't be possible for v6.0, but depending on the "
"efforts made during the migration process, it can be minimized to a large"
" extent."
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:52
msgid ""
"Running queries prior to the upgrade can also save some downtime. "
"However, some queries can still cause full table locking and require "
"Mattermost to be in read-only mode for the duration of the query."
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:54
msgid "We strongly recommend that you:"
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:56
msgid ""
"Set up a maintenance window outside of working hours to mitigate the "
"migration impact."
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:57
msgid ""
"Keep a backup of your database to ensure you can load a previous database"
" snapshot if necessary."
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:58
msgid ""
"Upgrade your instance of Mattermost to the latest :doc:`Extended Support "
"Release (ESR) </about/mattermost-server-releases>` first before "
"attempting to run the Mattermost v6.0 upgrade."
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:62
msgid ""
"Support for Mattermost Server v9.11 :doc:`Extended Support Release "
"</about/mattermost-server-releases>` is coming to the end of its life "
"cycle on May 15, 2025. Upgrading to Mattermost Server v10.5 Extended "
"Support Release or later is recommended. Upgrading from a previous "
"Extended Support Release to the latest Extended Support Release is "
"supported. Review the :doc:`important-upgrade-notes` for all intermediate"
" versions in between to ensure youâ€™re aware of the possible migrations "
"that could affect your upgrade."
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:65
msgid "v6.0 database schema migrations"
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:67
msgid ""
"Mattermost v6.0 introduces several database schema changes to improve "
"both database and application performance. The upgrade will run "
"significant database schema changes that can cause an extended startup "
"time depending on the dataset size. We've conducted extensive tests on "
"supported PostgreSQL database drivers, using realistic datasets of more "
"than 10 million posts and more than 72 million posts."
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:69
msgid ""
"The following query executed during the migration process will have a "
"significant impact on database CPU usage and write operation restrictions"
" for the duration of the query:"
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:71
msgid ""
"``ALTER TABLE posts ALTER COLUMN props TYPE jsonb USING props::jsonb;`` "
"(~ 11 minutes)"
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:73
msgid ""
"For a complete breakdown of PostgreSQL queries, as well as their impact "
"and duration, see the `Mattermost v6.0 DB schema migrations analysis "
"<https://gist.github.com/streamer45/59b3582118913d4fc5e8ff81ea78b055#postgresql-1>`__."
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:76
msgid "Upgrade from releases older than v5.35"
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:78
msgid ""
"Customers upgrading from a release older than Mattermost v5.35 should "
"expect extended downtime when upgrading to v6.0 due to the introduction "
"of backend database architecture introduced in v5.35. This upgrade path "
"isn't recommended for large installations. We recommend upgrading to the "
"latest :doc:`Extended Support Release (ESR) </about/mattermost-server-"
"releases>` first before upgrading to Mattermost v6.0. See the "
":doc:`unsupported legacy releases </about/unsupported-legacy-releases>` "
"documentation for additional details."
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:80
msgid ""
"If you're upgrading from a version prior to Mattermost v5.0, you can't "
"upgrade directly to v6.0. Instead, we strongly recommend approaching the "
"upgrade in phases, starting with an upgrade to the latest ESR first, "
"followed by the upgrade to v6.0. During the first phase of updates, you "
"must also modify your service file to work with the binary changes "
"introduced with the v5.0 release. Your execution directory should point "
"to the Mattermost base directory (i.e. ``/opt/mattermost``), and your "
"binary should point to the ``mattermost`` binary (i.e. "
"``/opt/mattermost/bin/mattermost``)."
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:82
msgid ""
"Ensure you review the :doc:`important-upgrade-notes` for all intermediate"
" release versions in between to ensure youâ€™re aware of the possible "
"migrations that could affect your upgrade."
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:86
msgid ""
"Customers upgrading from releases older than v5.35 following our "
"recommended upgrade process may encounter the following error during the "
"upgrade to v6.0:"
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:88
msgid ""
"``Failed to alter column type. It is likely you have invalid JSON values "
"in the column. Please fix the values manually and run the migration "
"again.\",\"caller\":\"sqlstore/store.go:854\",\"error\":\"pq: unsupported"
" Unicode escape sequence``"
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:90
msgid ""
"To assist with troubleshooting, you can enable ``SqlSettings.Trace`` to "
"narrow down what table and column are causing issues during the upgrade. "
"The following queries change the columns to JSONB format in PostgreSQL. "
"Run these against your v5.39 development database to find out which table"
" and column has Unicode issues:"
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:104
msgid ""
"Once you've identified the table being affected, verify how many invalid "
"occurrences of `\\u0000` you have using the following SELECT query:"
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:110
msgid ""
"Then select and fix the rows accordingly. If you prefer, you can also fix"
" all occurrences at once in a given table or column using the following "
"UPDATE query:"
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:117
msgid "Upgrade high availability cluster-based deployments"
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:119
msgid ""
"In :doc:`high availability cluster-based </scale/high-availability-"
"cluster-based-deployment>` environments, you should expect to schedule "
"downtime for the upgrade to v6.0. Based on your database size and setup, "
"the migration to v6.0 can take a significant amount of time, and may even"
" lock the tables for posts which will prevent your users from posting or "
"receiving messages until the migration is complete."
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:121
msgid ""
"Ensure you review the :ref:`high availability cluster-based deployment "
"upgrade guide <scale/high-availability-cluster-based-deployment:upgrade "
"guide>`, as well as the :doc:`important-upgrade-notes` to make sure "
"you're aware of any actions you need to take before or after upgrading "
"from your particular version."
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:125
msgid ""
"Running two different versions of Mattermost in your cluster should not "
"be done outside of an upgrade scenario. Due to a fundamental change to "
"the clustering code in v6.0, nodes from different versions cannot be run,"
" as noted in the :doc:`important-upgrade-notes` product documentation."
msgstr ""

#: ../../source/upgrade/prepare-to-upgrade-mattermost.rst:127
msgid ""
"The release of v6.0 also introduces database schema changes and longer "
"migration times should be expected."
msgstr ""

