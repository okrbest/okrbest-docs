# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2025 Mattermost
# This file is distributed under the same license as the Mattermost package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Mattermost \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-07 15:09+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ko\n"
"Language-Team: ko <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.15.0\n"

#: ../../source/about/faq-high-trust.rst:2
msgid "High Trust"
msgstr ""

#: ../../source/about/faq-high-trust.rst:5
msgid ""
"What are the trust benefits of Mattermost compared to third-party SaaS "
"systems that let customers manage their own encryption keys?"
msgstr ""

#: ../../source/about/faq-high-trust.rst:7
msgid ""
"**Encryption doesn't mean a third-party SaaS vendor can't read your "
"data.** A third-party vendor who provides encryption keys to the database"
" that stores a customer's data at rest may still be able to read a "
"customer's data while its in transit."
msgstr ""

#: ../../source/about/faq-high-trust.rst:9
msgid ""
"For example, performing a search on message histories requires access to "
"unencrypted messages in order to match the search term to words in your "
"unencrypted message history."
msgstr ""

#: ../../source/about/faq-high-trust.rst:11
msgid ""
"As another example, a customer's data encryption key is unlikely to be "
"deployed to the mobile devices of end users; therefore, when a third-"
"party system sends a push notification to an end user's mobile device, "
"the unencrypted text is available to the third party."
msgstr ""

#: ../../source/about/faq-high-trust.rst:13
msgid ""
"In contrast, Mattermost is hosted by the customer. Not only can data be "
"encrypted at rest and in-transit with keys generated by the customer "
"(which no vendors ever touch), unencrypted data for search and mobile "
"notifications is handled by systems under your IT team's control."
msgstr ""

#: ../../source/about/faq-high-trust.rst:15
msgid ""
"If it’s unclear from the vendor’s documentation whether or not your data "
"can be read, ask them directly."
msgstr ""

#: ../../source/about/faq-high-trust.rst:17
msgid ""
"**Moreover, high trust enterprises need more than encryption - they need "
"privacy, total data ownership, auditability, and control of their "
"infrastructure.**"
msgstr ""

#: ../../source/about/faq-high-trust.rst:19
msgid ""
"*Privacy* means a third-party service cannot monitor the identity, IP "
"address, location, or access patterns of your employees, nor their "
"activity on your system, nor provide that information either "
"intentionally through a court order (which you may never be informed "
"about) or unintentionally through a data breach."
msgstr ""

#: ../../source/about/faq-high-trust.rst:21
msgid ""
"*Total data ownership* means a third party cannot prevent you from "
"accessing your data at any time. It means no third party can read your "
"data, analyze it or monetize it. It means that should you end your "
"commercial relationship, you maintain your records with any backups. It "
"also means you can delete your data at any time and verify that no "
"additional copies remain."
msgstr ""

#: ../../source/about/faq-high-trust.rst:23
msgid ""
"*Audibility* means being able to fully observe, monitor, and trace the "
"operations of your systems."
msgstr ""

#: ../../source/about/faq-high-trust.rst:25
msgid ""
"*Control of infrastructure* means being able to operate and customize "
"your system to the specific needs of your business, including the ability"
" to run on public and private networks, as well as on-prem, and "
"interoperate with critical legacy systems with full observability and "
"transparency down to reading the source code."
msgstr ""

#: ../../source/about/faq-high-trust.rst:27
msgid ""
"As an open source self-hosted system, Mattermost provides privacy, total "
"data ownership, and control of infrastructure required by high trust "
"teams."
msgstr ""

#: ../../source/about/faq-high-trust.rst:30
msgid ""
"What are the fundamental security challenges with Massive, Multi-Tenant "
"Applications (MMTA)?"
msgstr ""

#: ../../source/about/faq-high-trust.rst:32
msgid ""
"The key risk of allowing confidential data to enter a Massively Multi-"
"Tenant Applications (MMTA) is having the system breached, never knowing "
"your data has been compromised, and having stolen data used to breach "
"your other systems."
msgstr ""

#: ../../source/about/faq-high-trust.rst:34
msgid ""
"Marketers from MMTA vendors pay highly credentialed security "
"professionals to offer \"Death Star Logic\" to gain a customer’s trust: "
"\"MMTA's SaaS offering is the most secure system in the galaxy because it"
" outspends its customers on security investments, therefore the MMTA is "
"more secure than a customer's self-hosted infrastructure.\""
msgstr ""

#: ../../source/about/faq-high-trust.rst:36
msgid ""
"The problem with Death Star Logic is that it omits the fact that hosting "
"confidential data from thousands of enterprise customers makes it the "
"prime target for cyber attacks, which increases risk to customers for "
"four key reasons:"
msgstr ""

#: ../../source/about/faq-high-trust.rst:38
msgid "**1) Over time, MMTA vendors become Nation State Targets**"
msgstr ""

#: ../../source/about/faq-high-trust.rst:40
msgid ""
"The effort behind a cyber attack is proportional to the value of "
"breaching the system. As the value of the data held by an MMTA vendor "
"increases, so does the scale of its cyber threats."
msgstr ""

#: ../../source/about/faq-high-trust.rst:42
msgid ""
"Vendors become \"Nation State Targets\" when the value of the breaching "
"their system is so high it attracts the attention of the cyberwarfare "
"branches of hostile nations. From there, even the smallest errors in "
"system security can result in a significant breach."
msgstr ""

#: ../../source/about/faq-high-trust.rst:44
msgid "**2) MMTA systems can't protect customers from unknown vulnerabilities**"
msgstr ""

#: ../../source/about/faq-high-trust.rst:46
msgid ""
"A single bug in an MMTA system can put all customers at risk. For "
"example, `Slack reported a bug that exposed message histories and files "
"for nearly four million users <https://www.wired.com/2017/03/hack-brief-"
"slack-bug-everyones-worst-office-nightmare/>`_ (2017), and `a bug left "
"400 million Microsoft accounts exposed to account takeover "
"<https://hackread.com/critical-bug-in-microsoft-left-400m-accounts-"
"exposed/>`_ (2018)."
msgstr ""

#: ../../source/about/faq-high-trust.rst:48
msgid ""
"For multi-tenant systems, bugs in infrastructure can present "
"vulnerabilities as well. For example, in 2018 researchers discovered that"
" chip-level exploits like `Meltdown and Spectre "
"<https://www.wired.com/story/intel-meltdown-spectre-storm/>`__, which had"
" been around for decades, could make it possible for malicious code run "
"by one tenant to affect the operations of another tenant that shared the "
"same CPU."
msgstr ""

#: ../../source/about/faq-high-trust.rst:50
msgid ""
"Keeping MMTA systems secure depends on the ability of internal and "
"external security researches to continually stay ahead of cyber-"
"attackers."
msgstr ""

#: ../../source/about/faq-high-trust.rst:52
msgid "**3) Customers don't know when breaches occur**"
msgstr ""

#: ../../source/about/faq-high-trust.rst:54
msgid ""
"When an MMTA is breached, it is most likely from an unknown bug or an "
"unknown vulnerability. Because of this, it may not be clear that a system"
" has been breached, and customers may not be notified. Moreover, "
"following a breach, there's often no way for the customer's security team"
" to audit the MMTA vendor and understand how their confidential data may "
"have been accessed or stolen."
msgstr ""

#: ../../source/about/faq-high-trust.rst:56
msgid ""
"The end result is confidential information passing through an MMTA may be"
" used to exploit other systems the customer operates, with no way to "
"trace the root of the breach to mitigate it in future."
msgstr ""

#: ../../source/about/faq-high-trust.rst:58
msgid ""
"As an example, when `OneLogin reported a security breach that allowed the"
" attacker to decrypt encrypted data impacting 2000 customers and 70 SaaS "
"apps <https://krebsonsecurity.com/2017/06/onelogin-breach-exposed-"
"ability-to-decrypt-data/>`_ (2017), details were vague and there was "
"little customers could do to analyze their risk or reduce risk in future."
msgstr ""

#: ../../source/about/faq-high-trust.rst:60
msgid ""
"In contrast, an open source, self-hosted collaboration solution remains "
"within the layers of physical security and network security enterprises "
"use to protect their most valuable assets, with full access to logging "
"and system histories to know when, where and how an attack might have "
"occurred."
msgstr ""

#: ../../source/about/faq-high-trust.rst:62
msgid ""
"Moreover, as a single-tenant solution, the strength of cyberattacks is "
"typically limited to the breach value of just your confidential data and "
"not the aggregate breach value of all customer data held by an MMTA. "
"Plus, the sum of security investments your company makes to protect "
"systems in its private networks accrues to your collaboration system - "
"and for banks, this could be hundreds of millions of dollars a year."
msgstr ""

#: ../../source/about/faq-high-trust.rst:64
msgid "**4) MMTA systems risk cross-bleeding your data**"
msgstr ""

#: ../../source/about/faq-high-trust.rst:66
msgid ""
"MMTA also runs the risk of bugs or misconfigurations in a vendor’s multi-"
"tenant system bleeding your data into another customer’s space, or vice "
"versa. Bleeds can occur via logging systems, in application logic, "
"middleware, and data layer errors. In 2019, `Facebook admitted to "
"accidentally storing hundreds of millions of user passwords in clear text"
" for years due to a configuration oversight "
"<https://krebsonsecurity.com/2019/03/facebook-stored-hundreds-of-"
"millions-of-user-passwords-in-plain-text-for-years/>`__."
msgstr ""

