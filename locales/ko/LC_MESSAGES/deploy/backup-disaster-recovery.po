# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2025 Mattermost
# This file is distributed under the same license as the Mattermost package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Mattermost \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-07 15:09+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ko\n"
"Language-Team: ko <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.15.0\n"

#: ../../source/deploy/backup-disaster-recovery.rst:2
msgid "Backup and disaster recovery"
msgstr ""

#: ../../source/_static/badges/allplans-selfhosted.rst:7
msgid "|plans-img| Available on `all plans <https://mattermost.com/pricing/>`__"
msgstr ""

#: ../../<rst_prolog>:2
msgid "plans-img"
msgstr ""

#: ../../source/_static/badges/allplans-selfhosted.rst:9
msgid ""
"|deployment-img| `self-hosted <https://mattermost.com/download/>`__ "
"deployments"
msgstr ""

#: ../../<rst_prolog>:4
msgid "deployment-img"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:7
msgid ""
"Options to protect your Mattermost server from different types of "
"failures range from simple backups to sophisticated disaster recovery "
"deployments and automation."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:10
msgid "Backup"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:12
msgid ""
"The state of your Mattermost server is contained in multiple data stores "
"that need to be backed up and restored separately to fully recover your "
"system from failure."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:14
msgid "To back up your Mattermost server:"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:16
msgid ""
"Back up your Mattermost database using standard procedures depending on "
"your database version. `PostgreSQL SQL Dump backup documentation "
"<https://www.postgresql.org/docs/10/backup-dump.html>`__ is available "
"online. Use the navigation at the top of the page to select your "
"PostgreSQL version."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:18
msgid ""
"Back up your server settings stored in ``config/config.json``. If you are"
" using SAML configuration for Mattermost, your SAML certificate files "
"will be saved in the ``config`` directory. Therefore, we recommend "
"backing up the entire directory."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:20
msgid "Back up files stored by your users with 1 of the following options:"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:22
msgid ""
"If you use local storage using the default ``./data`` directory, back up "
"this directory."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:23
msgid ""
"If you use local storage using a non-default directory specified in the "
"``Directory`` setting in ``config.json``, back up files in that location."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:24
msgid ""
"If you store your files in S3, you can typically keep the files where "
"they are located without backup."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:28
msgid ""
"To make a clean backup, you must stop Mattermost during the duration of "
"the backup, otherwise the database and files may become out of sync."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:30
msgid ""
"To restore a Mattermost instance from backup, restore your database, "
"``config.json`` file, and optionally the locally stored user files into "
"the locations from which they were backed up."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:33
msgid "Disaster recovery"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:35
msgid ""
"An appropriate disaster recovery plan weighs the benefits of mitigating "
"specific risks against the cost and complexity of setting up disaster "
"recovery infrastructure and automation."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:38
msgid "Automated backup"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:40
msgid ""
"Automating backups for a Mattermost server provides a copy of the "
"server's state at a particular point in time, which can be restored if a "
"failure in the future leads to loss of data. Options include:"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:42
msgid ""
"Automation to periodically back up the Mattermost server, which may "
"include all the components listed above or a subset depending on what you"
" choose to protect."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:43
msgid ""
"Automation to restore a server from backup, or deploy a new server, to "
"reduce recovery time."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:44
msgid ""
"Automation to verify a backup has been successfully produced to protect "
"against backup automation failures."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:45
msgid ""
"Storing backups off-site, to protect against physical loss of onsite "
"systems."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:47
msgid ""
"Recovering from a failure using a backup is typically a manual process "
"and will incur downtime. The alternative is to automate recovery using a "
"high availability deployment."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:50
msgid "High Availability deployment"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:52
msgid ""
"Enterprise customers who use Mattermost for mission-critical operations "
"must ensure continuous availability and operational resilience. A robust "
"disaster recovery strategy is essential to mitigate risks associated with"
" data center failures, ensuring that users can access Mattermost "
"seamlessly, even in the event of unexpected outages."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:54
msgid ""
"This section details the steps needed to set up Mattermost in a disaster "
"recovery mode, and how to fail over from one data center to another."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:57
msgid "Set up in one data center"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:59
msgid ""
"As a first step, set up Mattermost in a single data center. At a very "
"basic high level, this would be something like below:"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:-1
msgid ""
"An architecture diagram showing a single proxy that's forwarding traffic "
"to 2 nodes, a database with single writer + n readers, and an S3 bucket "
"and ES/OS using AWS Opensearch service."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:64
msgid ""
"The diagram above has a single proxy, forwarding traffic to 2 nodes. "
"There's also a database with single writer + n readers and an S3 bucket "
"and ES/OS using AWS Opensearch service."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:66
msgid "At this stage, we are ignoring other details like LDAP/SAML, SMTP etc."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:69
msgid ""
"The following architecture would be implemented when an entire region "
"goes down. It does not cover the case when a single server/service goes "
"down. For example:"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:71
msgid ""
"If a single app node goes down, follow best practices to provision a new "
"node."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:72
msgid ""
"If a database replica node goes down, create a new replica from AWS "
"console. Or set a policy to do so automatically."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:75
msgid "Replicate database"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:77
msgid "The next tasks include creating a global AWS Cluster."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:79
msgid ""
"Select the RDS instance in the AWS Console, and expand the **Actions** "
"menu to select **Add AWS Region**."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:81
msgid "Choose the secondary region and enter the other details."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:85
msgid ""
"Select the **Enable write forwarding** option on the secondary cluster to"
" help forward write operations from secondary to primary. See the "
"`AmazonRDS write forwarding "
"<https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-"
"global-database-write-forwarding-apg.html#aurora-global-database-write-"
"forwarding-enabling-apg>`_ documentation for details."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:87
msgid ""
"Also verify the PostgreSQL version and ensure it allows ``write "
"forwarding``. Not all PostgreSQL versions allow it. See the `Amazon RDS "
"write forwarding region and version availability "
"<https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-"
"global-database-write-forwarding-apg.html#aurora-global-database-write-"
"forwarding-regions-versions-apg>`_ documentation for details."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:89
msgid ""
"You should now have a global cluster with the primary cluster in ``us-"
"west-1``, and the secondary cluster in ``us-east-1``:"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:-1
msgid ""
"A screenshot of the AWS console with a global RDS cluster where the "
"primary cluster is us-west-1 and the secondary cluster is us-east-1."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:95
msgid "Replicate S3 bucket"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:97
msgid "Create a new S3 bucket in the secondary region."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:99
msgid ""
"Back in the original bucket, go to the **Properties** tab, and enable "
"**Bucket versioning**."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:101
msgid ""
"Go to the **Management** tab, scroll down to **Replication Rules**, and "
"create a new replication rule."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:103
msgid ""
"In the rule, select the source bucket, and then choose **Apply to all "
"objects in the bucket** to replicate everything in the bucket."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:105
msgid "Choose the destination bucket."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:107
msgid "For the IAM role, select **Create new role**."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:111
msgid ""
"Select the **Replica modification sync** option for the bucket to help "
"keep the replica and source buckets in sync with each other."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:113
msgid "Select **Save**."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:115
msgid ""
"Select **Yes** when prompted to start a job to replicate any existing "
"objects to the secondary bucket or not."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:117
msgid "Perform these same steps on the secondary bucket."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:119
msgid ""
"Now you have bi-directional replication working between these S3 replica "
"and source buckets."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:122
msgid "Replicate ES/OS storage"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:124
msgid ""
"To replicate ES/OS storage, set up CCR (cross-cluster replication) for "
"AWS Opensearch with the following requirements:"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:126
msgid "Elasticsearch 7.10 or OpenSearch 2.x"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:127
msgid "Fine-grained access control enabled"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:128
msgid "Node-to-node encryption enabled"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:132
msgid ""
"All you need is a recent OpenSearch version with fine-grained access "
"control enabled. Node-to-node encryption is automatically enabled once "
"you enable fine-grained access control."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:134
msgid ""
"You also need to add the ``CrossClusterGet`` permission on the IAM policy"
" for the OS cluster set under the **Security Configuration** tab for your"
" OS domain. We recommend the following as per AWS, but feel free to fine-"
"tune as necessary:"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:160
msgid "To recap:"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:162
msgid "Use Opensearch 2.x."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:163
msgid "Enable fine-grained access control."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:164
msgid "Create the master user, and note the server credentials."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:165
msgid "Set the IAM policy as above."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:169
msgid ""
"After creating the master user, IP based access to the OS might not work "
"from Mattermost application nodes. You may need to update the "
"``ElasticSearchSettings`` section in ``config.json`` to update the server"
" :ref:`username <configure/environment-configuration-settings:server "
"username>` and :ref:`password <configure/environment-configuration-"
"settings:server password>`."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:171
msgid ""
"Create a new OS cluster in the secondary region. Follow the same steps "
"again for this cluster."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:175
msgid ""
"At this stage, ensure that you have all indices populated with data in "
"the primary region. Run a bulk index to do that if you haven’t already."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:177
msgid "Begin replication from the primary to secondary region."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:179
msgid ""
"First, create a connection from secondary to primary. Note that "
"replication in OS works in a “pull“ model, so the secondary site pulls "
"data from the primary."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:181
msgid ""
"In the Amazon OpenSearch Service console, select the secondary domain, go"
" to the **Connections** tab, and choose **Request**."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:183
msgid "For **Connection alias**, enter a name for your connection."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:185
msgid ""
"Choose **connect to a domain in another AWS account or region**, and "
"enter the **ARN** of the primary domain."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:187
msgid "Select **Request** to send a permission request to the primary domain."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:189
msgid ""
"Open the primary domain to see and accept the incoming request under the "
"**Connections** tab."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:191
msgid "Now set up the replication rules for indices."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:193
msgid ""
"SSH into an app node in the secondary region to set up an auto-follow "
"rule for the ``posts*`` indices because of the daily naming scheme and "
"monthly aggregation."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:195
msgid ""
"For the other indices, replicate each of them. You can also set up a rule"
" with ``*`` to replicate everything, but that would also include the "
"hidden and system indices which you don’t want."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:197
msgid "Set up the auto-follow for ``posts*`` indices:"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:212
msgid "Check the status of the auto-follow rule:"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:235
msgid "Next, set up replication for the other indices:"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:269
msgid "Check the status of the replication rules:"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:292
msgid ""
"Check for indices. You should be able to see all the indices from the "
"primary domain in the secondary domain:"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:299
msgid "Replicate job servers"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:301
msgid ""
"If the job scheduler is left running in the secondary region, it will "
"pick up jobs and start running them. Therefore, set "
"``JobSettings.RunScheduler`` to ``false`` on all nodes in the secondary "
"region. When a failover happens, you need to enable it for the new "
"primary region, and deactivate it for the new secondary region."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:304
msgid "Test the secondary region"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:306
msgid ""
"With the above steps complete, you have a fully functioning secondary "
"region. You can replicate the same setup of nodes and a proxy server like"
" the primary region. The app nodes in the secondary region won’t be able "
"to come up the first time because Mattermost will try to run some DDL "
"statements which are not allowed with write-forwarding. So it will be "
"stuck in a loop trying to connect. Once you fail over the region, it will"
" start working. The primary region will still be readable, and any "
"periodic writes will be forwarded to the secondary (now primary)."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:310
msgid ""
"Ensure you have separate ``ClusterNames`` for the different clusters in "
"two regions to use the same database across 2 clusters."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:313
msgid "Failover RDS to secondary"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:315
msgid ""
"To perform the failover, go to the RDS global cluster, and under "
"**Actions**, select **Switchover or Failover global database**, and then "
"select **switchover** to switch over without any data loss (which will "
"take more time to complete). Alternatively, you can choose **failover** "
"for a quicker failover at the expense of data-loss. If the entire region "
"is unavailable anyways, then **failover** is no worse than "
"**switchover**."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:317
msgid ""
"After this is done, the app nodes which were stuck trying to connect "
"should move forward and everything should be functional. You can "
"read/write, upload images and everything should be replicated. Everything"
" except Opensearch data."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:320
msgid "Failover ES/OS to secondary"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:322
msgid ""
"ES/OS does not allow multi-writer for a single index. You can only write "
"to 1 index at one time. Therefore, you need to perform some manual steps "
"to reverse the replication direction, and start replicating from "
"secondary to primary."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:324
msgid ""
"For simplicity, let’s say ``site1`` is primary, and ``site2`` is "
"secondary. Therefore, OS in ``site1`` is the leader domain, and in "
"``site2`` is the follower. The follower pulls from the leader. To switch "
"the direction where ``site2`` becomes leader, and ``site1`` becomes "
"follower."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:326
msgid ""
"Remove the rule from ``site1`` → ``site 2`` in AWS Console. This will "
"auto-pause the replication, but the indices in ``site2`` will still be "
"read-only. Remove the replication rules for that."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:328
msgid "Remove auto-follow rule:"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:338
msgid "Check the status of the auto-follow rule as mentioned before."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:340
msgid "Remove replication rules:"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:348
msgid "Check the status of replication rules as mentioned before."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:350
msgid "Now indices will become writable"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:352
msgid "Add rule from ``site2`` → ``site1`` in AWS console."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:354
msgid ""
"In ``site1``, make all the indices as followers. You must delete all "
"indices first:"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:363
msgid "Refresh indices:"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:369
msgid "Confirm that everything is deleted:"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:375
msgid ""
"Add the auto-follow rule add replication rules. Follow the same steps as "
"before."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:377
msgid ""
"List the indices again to confirm that replication has started and "
"indices are available."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:380
msgid "S3 bucket is auto-replicated both ways"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:382
msgid ""
"There’s nothing you need to do to ensure the S3 bucket is auto-"
"replicating both ways."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:385
msgid "Testing end to end"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:387
msgid ""
"Once the failover has happened, and the ES/OS replication direction has "
"been swapped, the new site can be used normally."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:389
msgid "This becomes the final architecture:"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:-1
msgid ""
"A diagram showing the final architecture with Mattermost set up in 2 data"
" centers."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:394
msgid ""
"You can use DNS to easily switch between PRIMARY to SECONDARY during a "
"failover."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:397
msgid ""
"Websockets will still point to the old data center even if you have "
"switched DNS. You need to roll over each app node gradually to move those"
" connections to the new data center. If all your nodes are down, no "
"action is necessary and the clients will automatically re-connect to the "
"new data center."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:399
msgid ""
"The S3 bucket is replicated bi-directionally while the database and ES/OS"
" is replicated uni-directionally."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:402
msgid "Failover from Single Sign-On outage"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:404
msgid ""
"When using Single Sign-on with Mattermost Enterprise Edition an outage to"
" your SSO provider can cause a partial outage on your Mattermost "
"instance."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:406
msgid "**What happens during an SSO outage?**"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:408
msgid ""
"**Most people can still log in.** By default, when a user logs in to "
"Mattermost they receive a session token lasting 30 days (the duration can"
" be configured in the System Console). During an SSO outage, users with "
"valid session tokens can continue to using Mattermost uninterrupted."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:409
msgid ""
"**Some people can't log in.** During an SSO outage, there are two "
"situations under which a user cannot log in:"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:411
msgid "Users whose session token expires during the outage."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:412
msgid "Users trying to log in to new devices."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:414
msgid ""
"In each case, the user cannot reach the SSO provider, and cannot log in. "
"In this case, there are several potential mitigations:"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:417
msgid "Configure your SSO provider for High Availability"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:419
msgid ""
"If you're using a self-hosted Single Sign-on provider, several options "
"are available for `High Availability configurations that protect your "
"system from unplanned outages <https://learn.microsoft.com/en-us"
"/microsoft-identity-manager/pam/high-availability-disaster-recovery-"
"considerations-bastion-environment>`_."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:421
msgid ""
"For SaaS-based authentication providers, while you still have a "
"dependency on service uptime, you can set up redundancy in source systems"
" from which data is being pulled. For example, with the OneLogin SaaS-"
"based authentication service, you can set up High Availability LDAP "
"connectivity to further reduce the chances of an outage."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:424
msgid "Set up your own IDP to provide an automated or manual SSO failover option"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:426
msgid ""
"Create a custom Identity Provider for SAML authentication that connects "
"to both an active and a standby authentication option, that can be "
"manually or automatically switched in case of an outage."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:428
msgid ""
"In this configuration, security should be carefully reviewed to prevent "
"the standby SSO option from weakening your authentication protocols."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:431
msgid "Set up a manual failover plan for SSO outages"
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:433
msgid ""
"When users are unable to reach your organization's SSO provider during an"
" outage, an error message directing them to contact your support link "
"(defined in your System Console settings) is displayed."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:435
msgid ""
"Once IT is contacted about an SSO outage issue, they can temporarily "
"change a user's account from SSO to email-password using the System "
"Console, and the end user can use password to claim the account, until "
"the SSO outage is over and the account can be converted back to SSO."
msgstr ""

#: ../../source/deploy/backup-disaster-recovery.rst:437
msgid ""
"When the outage is over, it's critical to switch everyone back to SSO "
"from email-password to maintain consistency and security."
msgstr ""

